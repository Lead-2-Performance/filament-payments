<?php

namespace TomatoPHP\FilamentPayments\Filament\Actions;



use Filament\Notifications\Notification;
use Filament\Tables\Actions\Action;
use TomatoPHP\FilamentPayments\Facades\FilamentPayments;
use TomatoPHP\FilamentPayments\Services\Contracts\PaymentRequest;

class PaymentAction extends Action
{

    public ?\Closure $request=null;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->requiresConfirmation();

        $this->icon('heroicon-s-credit-card');
        $this->iconButton();
        $this->color("info");
        $this->label(trans('filament-payments::messages.view.payment_action'));
        $this->tooltip(trans('filament-payments::messages.view.payment_action'));
    }

    public function request(\Closure $request): static
    {
        $this->request = $request;
        return $this;
    }

    public function pay(): static
    {
        $this->action(function(){
            $callback = call_user_func($this->request, $this->record);
            $payment = FilamentPayments::pay(data: $callback);
            if(is_array($payment)){
                Notification::make()
                    ->title(trans('filament-payments::messages.view.error'))
                    ->body($payment['error'])
                    ->danger()
                    ->send();
            }
            else {
                return redirect()->to($payment);
            }

        });

        return $this;
    }
}
